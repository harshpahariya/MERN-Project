{"version":3,"sources":["components/Skills.js","components/Info.js","components/Test.js","components/Experience.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["Skills","className","Component","Info","Test","this","props","secret","Experience","state","mobile","submitData","console","log","sessionStorage","setItem","type","value","onChange","e","setState","target","onClick","secretKey","Header","Layout","Sider","Content","MyLayout","collapsed","toggle","style","height","trigger","collapsible","size","icon","UserOutlined","theme","mode","defaultSelectedKeys","Item","key","to","VideoCameraOutlined","UploadOutlined","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9721652b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Progress } from 'antd';\r\n\r\n class Skills extends Component {\r\n    render() {\r\n        return (\r\n            <div className='skills-section'>\r\n                <div className='card'>\r\n                    <div>\r\n                        Languages\r\n                    </div>\r\n                    <div>\r\n                        JavaScript\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Skills\r\n","import React, { Component } from 'react'\r\n\r\nclass Info extends Component {\r\n    render() {\r\n        return (\r\n            <center>\r\n              <h1>Hi, I am John Doe</h1>  <br/>\r\n              <h3>Full stack developer</h3>\r\n            </center>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Info\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.secret}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test\r\n","import React, { Component } from 'react';\r\nimport Test from './Test';\r\n\r\nclass Experience extends Component {\r\n    state = {\r\n        mobile: '',\r\n        //secretKey: 'qwertyuiopamit'\r\n    }\r\n\r\n    submitData = () => {\r\n        console.log(this.state.mobile);\r\n        //axios.post('').then(res => this.setState({secretKey : res.data}));\r\n        sessionStorage.setItem(\"key\", \"qwertyiotiuot\");\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.state.mobile);\r\n        return (\r\n            <div>\r\n                Mobile no. <input type='text' value={this.state.mobile} onChange={(e) => this.setState({mobile: e.target.value})} />\r\n                <button onClick={this.submitData}> Get OTP</button>\r\n                <Test secret={this.state.secretKey} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Experience\r\n","import { Layout, Menu, Avatar } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport React from 'react';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    UserOutlined,\r\n    VideoCameraOutlined,\r\n    UploadOutlined,\r\n} from '@ant-design/icons';\r\nimport './layout.css';\r\nimport Skills from './Skills';\r\nimport Info from './Info';\r\nimport Experience from './Experience';\r\nimport { Switch, Link, Route } from 'react-router-dom';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nclass MyLayout extends React.Component {\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Layout style={{ height: '657px' }}>\r\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n                    <div className=\"logo\">{this.state.collapsed ? \"John\" : \"John Doe\"}</div>\r\n                    <div className=\"avatar\"><Avatar size={this.state.collapsed ? 50 : 90} icon={<UserOutlined />} />J</div>\r\n\r\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n\r\n                        <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n                            <Link to='/'>\r\n                                My Info\r\n                        </Link>\r\n                        </Menu.Item>\r\n\r\n\r\n                        <Menu.Item key=\"2\" icon={<UserOutlined />}>\r\n                            <Link to='/skills'>\r\n                                Skills\r\n                        </Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"3\" icon={<VideoCameraOutlined />}>\r\n                            <Link to='/experience'>\r\n                                Experience\r\n                    </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\" icon={<UploadOutlined />}>\r\n                            <Link to='/education'>\r\n                                Education\r\n                    </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"5\" icon={<UploadOutlined />}>\r\n                            Projects\r\n                    </Menu.Item>\r\n\r\n                    </Menu>\r\n\r\n                </Sider>\r\n                <Layout className=\"site-layout\">\r\n                    <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n                        {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                            className: 'trigger',\r\n                            onClick: this.toggle,\r\n                        })}\r\n                    </Header>\r\n                    <Content\r\n                        className=\"site-layout-background\"\r\n                        style={{\r\n                            margin: '24px 16px',\r\n                            padding: 24,\r\n                            minHeight: 280,\r\n                        }}\r\n                    >\r\n                        <Switch>\r\n                            <Route path='/' exact component={Info} />\r\n                            <Route path='/skills' component={Skills} />\r\n                            <Route path='/experience' component={Experience} />\r\n                        </Switch>\r\n\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyLayout;\r\n","import React from 'react';\nimport MyLayout from './components/Layout';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n  return (\n      <Router>\n        <MyLayout />\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}